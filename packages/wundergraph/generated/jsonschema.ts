// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import { JSONSchema7 } from "json-schema";

interface Schema {
	CreatePost: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	DeletePost: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	ReadPosts: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
}

const jsonSchema: Schema = {
	CreatePost: {
		input: {
			type: "object",
			properties: { input: { $ref: "#/definitions/db_PostCreateInput" } },
			additionalProperties: false,
			required: ["input"],
			definitions: {
				db_PostCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						body: { type: "string" },
						created_at: { type: ["string", "null"] },
						User: { $ref: "#/definitions/db_UserCreateNestedOneWithoutPostInput" },
					},
					required: ["body", "User"],
				},
				db_UserCreateNestedOneWithoutPostInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutPostInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { username: { type: "string" }, created_at: { type: ["string", "null"] } },
				},
				db_UserCreateOrConnectWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["integer", "null"] }, username: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOnePost: {
							type: "object",
							properties: { id: { type: "integer" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	DeletePost: {
		input: { type: "object", properties: { id: { type: "integer" } }, additionalProperties: false, required: ["id"] },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOnePost: {
							type: "object",
							properties: { id: { type: "integer" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	ReadPosts: {
		input: { type: "object", properties: {}, additionalProperties: false },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyPost: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "integer" },
									User: {
										type: "object",
										properties: { username: { type: "string" } },
										additionalProperties: false,
										required: ["username"],
									},
									body: { type: "string" },
									created_at: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "User", "body", "created_at"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyPost"],
				},
			},
			additionalProperties: false,
		},
	},
};
export default jsonSchema;
